// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load,sel=address[9..11],a=load1,b=load2,c=load3,d=load4,e=load5,f=load6,g=load7,h=load8);

    RAM512(in=in ,load=load1 ,address= address[0..8] ,out= r512Out1 );
    RAM512(in=in ,load=load2 ,address= address[0..8] ,out= r512Out2);
    RAM512(in=in ,load=load3 ,address= address[0..8] ,out= r512Out3);
    RAM512(in=in ,load=load4 ,address= address[0..8] ,out= r512Out4);
    RAM512(in=in ,load=load5 ,address= address[0..8] ,out= r512Out5);
    RAM512(in=in ,load=load6 ,address= address[0..8] ,out= r512Out6);
    RAM512(in=in ,load=load7 ,address= address[0..8] ,out= r512Out7);
    RAM512(in=in ,load=load8 ,address= address[0..8] ,out= r512Out8);

    Mux8Way16(a= r512Out1,b= r512Out2,c= r512Out3,d= r512Out4,e= r512Out5,f= r512Out6,g= r512Out7,h= r512Out8,sel=address[9..11],out=out);
}
